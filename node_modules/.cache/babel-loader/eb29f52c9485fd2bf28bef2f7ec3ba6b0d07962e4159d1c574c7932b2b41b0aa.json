{"ast":null,"code":"class GoogleSheetsService{constructor(){this.spreadsheetId=void 0;this.apiKey=void 0;this.clientEmail=void 0;this.privateKey=void 0;this.spreadsheetId=process.env.REACT_APP_SPREADSHEET_ID||'';this.apiKey=process.env.REACT_APP_GOOGLE_API_KEY||'';this.clientEmail=process.env.REACT_APP_GOOGLE_CLIENT_EMAIL||'';this.privateKey=process.env.REACT_APP_GOOGLE_PRIVATE_KEY||'';}async getCustomers(){// 本番環境ではGoogle Sheets APIから直接データを取得\nif(process.env.NODE_ENV==='production'&&this.spreadsheetId&&this.apiKey){try{return await this.fetchFromGoogleSheets();}catch(error){console.error('Google Sheets API エラー:',error);return this.getMockCustomers();}}// 開発環境ではモックデータを返す\nreturn this.getMockCustomers();}async fetchFromGoogleSheets(){try{// Google Sheets API v4を使用してデータを取得\nconst response=await fetch(\"https://sheets.googleapis.com/v4/spreadsheets/\".concat(this.spreadsheetId,\"/values/Sheet1?key=\").concat(this.apiKey));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();return this.parseSheetData(data.values||[]);}catch(error){console.error('Google Sheets データ取得エラー:',error);throw error;}}parseSheetData(values){if(values.length<2){return[];}// ヘッダー行をスキップしてデータを解析\nconst headers=values[0];const dataRows=values.slice(1);return dataRows.map((row,index)=>{// ヘッダーに基づいてデータをマッピング\nconst getValue=headerName=>{const headerIndex=headers.findIndex(h=>h.toLowerCase().includes(headerName.toLowerCase()));return headerIndex>=0?row[headerIndex]||'':'';};return{id:getValue('id')||\"C\".concat(String(index+1).padStart(3,'0')),name:getValue('name')||getValue('名前')||'',petName:getValue('pet')||getValue('ペット')||getValue('petname')||'',email:getValue('email')||getValue('メール')||'',phone:getValue('phone')||getValue('電話')||getValue('tel')||'',address:getValue('address')||getValue('住所')||'',petType:getValue('type')||getValue('種類')||'その他',breed:getValue('breed')||getValue('品種')||'',age:parseInt(getValue('age')||getValue('年齢')||'0')||0,weight:parseFloat(getValue('weight')||getValue('体重')||'0')||0,imageUrl:getValue('image')||getValue('画像')||'',notes:getValue('notes')||getValue('備考')||getValue('memo')||'',createdAt:getValue('created')||getValue('登録日')||new Date().toISOString().split('T')[0],lastVisit:getValue('lastvisit')||getValue('最終来店')||'',status:getValue('status')||getValue('ステータス')||'active'};}).filter(customer=>customer.name&&customer.petName);// 名前とペット名があるもののみ\n}async getCustomerById(id){const customers=await this.getCustomers();return customers.find(customer=>customer.id===id)||null;}// モックデータ（開発用）\ngetMockCustomers(){return[{id:'C001',name:'田中太郎',petName:'ポチ',email:'tanaka@example.com',phone:'090-1234-5678',address:'東京都渋谷区',petType:'犬',breed:'柴犬',age:3,weight:8.5,imageUrl:'https://via.placeholder.com/150',notes:'人懐っこい性格',createdAt:'2024-01-15',lastVisit:'2024-01-20',status:'active'},{id:'C002',name:'佐藤花子',petName:'ミケ',email:'sato@example.com',phone:'090-9876-5432',address:'東京都新宿区',petType:'猫',breed:'アメリカンショートヘア',age:2,weight:4.2,imageUrl:'https://via.placeholder.com/150',notes:'少し臆病',createdAt:'2024-01-10',lastVisit:'2024-01-18',status:'active'},{id:'C003',name:'山田次郎',petName:'ハナ',email:'yamada@example.com',phone:'090-5555-1234',address:'東京都世田谷区',petType:'犬',breed:'ゴールデンレトリバー',age:5,weight:25.0,imageUrl:'https://via.placeholder.com/150',notes:'とても活発',createdAt:'2024-01-05',lastVisit:'2024-01-12',status:'active'}];}}export default GoogleSheetsService;","map":{"version":3,"names":["GoogleSheetsService","constructor","spreadsheetId","apiKey","clientEmail","privateKey","process","env","REACT_APP_SPREADSHEET_ID","REACT_APP_GOOGLE_API_KEY","REACT_APP_GOOGLE_CLIENT_EMAIL","REACT_APP_GOOGLE_PRIVATE_KEY","getCustomers","NODE_ENV","fetchFromGoogleSheets","error","console","getMockCustomers","response","fetch","concat","ok","Error","status","data","json","parseSheetData","values","length","headers","dataRows","slice","map","row","index","getValue","headerName","headerIndex","findIndex","h","toLowerCase","includes","id","String","padStart","name","petName","email","phone","address","petType","breed","age","parseInt","weight","parseFloat","imageUrl","notes","createdAt","Date","toISOString","split","lastVisit","filter","customer","getCustomerById","customers","find"],"sources":["C:/Users/user/OneDrive/Desktop/preschool_data/src/services/googleSheetsApi.ts"],"sourcesContent":["import { CustomerData } from '../types/customer';\r\n\r\nclass GoogleSheetsService {\r\n  private spreadsheetId: string;\r\n  private apiKey: string;\r\n  private clientEmail: string;\r\n  private privateKey: string;\r\n\r\n  constructor() {\r\n    this.spreadsheetId = process.env.REACT_APP_SPREADSHEET_ID || '';\r\n    this.apiKey = process.env.REACT_APP_GOOGLE_API_KEY || '';\r\n    this.clientEmail = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL || '';\r\n    this.privateKey = process.env.REACT_APP_GOOGLE_PRIVATE_KEY || '';\r\n  }\r\n\r\n  async getCustomers(): Promise<CustomerData[]> {\r\n    // 本番環境ではGoogle Sheets APIから直接データを取得\r\n    if (process.env.NODE_ENV === 'production' && this.spreadsheetId && this.apiKey) {\r\n      try {\r\n        return await this.fetchFromGoogleSheets();\r\n      } catch (error) {\r\n        console.error('Google Sheets API エラー:', error);\r\n        return this.getMockCustomers();\r\n      }\r\n    }\r\n    \r\n    // 開発環境ではモックデータを返す\r\n    return this.getMockCustomers();\r\n  }\r\n\r\n  private async fetchFromGoogleSheets(): Promise<CustomerData[]> {\r\n    try {\r\n      // Google Sheets API v4を使用してデータを取得\r\n      const response = await fetch(\r\n        `https://sheets.googleapis.com/v4/spreadsheets/${this.spreadsheetId}/values/Sheet1?key=${this.apiKey}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      return this.parseSheetData(data.values || []);\r\n    } catch (error) {\r\n      console.error('Google Sheets データ取得エラー:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private parseSheetData(values: string[][]): CustomerData[] {\r\n    if (values.length < 2) {\r\n      return [];\r\n    }\r\n\r\n    // ヘッダー行をスキップしてデータを解析\r\n    const headers = values[0];\r\n    const dataRows = values.slice(1);\r\n\r\n    return dataRows.map((row, index) => {\r\n      // ヘッダーに基づいてデータをマッピング\r\n      const getValue = (headerName: string) => {\r\n        const headerIndex = headers.findIndex(h => h.toLowerCase().includes(headerName.toLowerCase()));\r\n        return headerIndex >= 0 ? row[headerIndex] || '' : '';\r\n      };\r\n\r\n      return {\r\n        id: getValue('id') || `C${String(index + 1).padStart(3, '0')}`,\r\n        name: getValue('name') || getValue('名前') || '',\r\n        petName: getValue('pet') || getValue('ペット') || getValue('petname') || '',\r\n        email: getValue('email') || getValue('メール') || '',\r\n        phone: getValue('phone') || getValue('電話') || getValue('tel') || '',\r\n        address: getValue('address') || getValue('住所') || '',\r\n        petType: (getValue('type') || getValue('種類') || 'その他') as '犬' | '猫' | 'その他',\r\n        breed: getValue('breed') || getValue('品種') || '',\r\n        age: parseInt(getValue('age') || getValue('年齢') || '0') || 0,\r\n        weight: parseFloat(getValue('weight') || getValue('体重') || '0') || 0,\r\n        imageUrl: getValue('image') || getValue('画像') || '',\r\n        notes: getValue('notes') || getValue('備考') || getValue('memo') || '',\r\n        createdAt: getValue('created') || getValue('登録日') || new Date().toISOString().split('T')[0],\r\n        lastVisit: getValue('lastvisit') || getValue('最終来店') || '',\r\n        status: (getValue('status') || getValue('ステータス') || 'active') as 'active' | 'inactive'\r\n      };\r\n    }).filter(customer => customer.name && customer.petName); // 名前とペット名があるもののみ\r\n  }\r\n\r\n  async getCustomerById(id: string): Promise<CustomerData | null> {\r\n    const customers = await this.getCustomers();\r\n    return customers.find(customer => customer.id === id) || null;\r\n  }\r\n\r\n  // モックデータ（開発用）\r\n  getMockCustomers(): CustomerData[] {\r\n    return [\r\n      {\r\n        id: 'C001',\r\n        name: '田中太郎',\r\n        petName: 'ポチ',\r\n        email: 'tanaka@example.com',\r\n        phone: '090-1234-5678',\r\n        address: '東京都渋谷区',\r\n        petType: '犬',\r\n        breed: '柴犬',\r\n        age: 3,\r\n        weight: 8.5,\r\n        imageUrl: 'https://via.placeholder.com/150',\r\n        notes: '人懐っこい性格',\r\n        createdAt: '2024-01-15',\r\n        lastVisit: '2024-01-20',\r\n        status: 'active'\r\n      },\r\n      {\r\n        id: 'C002',\r\n        name: '佐藤花子',\r\n        petName: 'ミケ',\r\n        email: 'sato@example.com',\r\n        phone: '090-9876-5432',\r\n        address: '東京都新宿区',\r\n        petType: '猫',\r\n        breed: 'アメリカンショートヘア',\r\n        age: 2,\r\n        weight: 4.2,\r\n        imageUrl: 'https://via.placeholder.com/150',\r\n        notes: '少し臆病',\r\n        createdAt: '2024-01-10',\r\n        lastVisit: '2024-01-18',\r\n        status: 'active'\r\n      },\r\n      {\r\n        id: 'C003',\r\n        name: '山田次郎',\r\n        petName: 'ハナ',\r\n        email: 'yamada@example.com',\r\n        phone: '090-5555-1234',\r\n        address: '東京都世田谷区',\r\n        petType: '犬',\r\n        breed: 'ゴールデンレトリバー',\r\n        age: 5,\r\n        weight: 25.0,\r\n        imageUrl: 'https://via.placeholder.com/150',\r\n        notes: 'とても活発',\r\n        createdAt: '2024-01-05',\r\n        lastVisit: '2024-01-12',\r\n        status: 'active'\r\n      }\r\n    ];\r\n  }\r\n}\r\n\r\nexport default GoogleSheetsService;"],"mappings":"AAEA,KAAM,CAAAA,mBAAoB,CAMxBC,WAAWA,CAAA,CAAG,MALNC,aAAa,aACbC,MAAM,aACNC,WAAW,aACXC,UAAU,QAGhB,IAAI,CAACH,aAAa,CAAGI,OAAO,CAACC,GAAG,CAACC,wBAAwB,EAAI,EAAE,CAC/D,IAAI,CAACL,MAAM,CAAGG,OAAO,CAACC,GAAG,CAACE,wBAAwB,EAAI,EAAE,CACxD,IAAI,CAACL,WAAW,CAAGE,OAAO,CAACC,GAAG,CAACG,6BAA6B,EAAI,EAAE,CAClE,IAAI,CAACL,UAAU,CAAGC,OAAO,CAACC,GAAG,CAACI,4BAA4B,EAAI,EAAE,CAClE,CAEA,KAAM,CAAAC,YAAYA,CAAA,CAA4B,CAC5C;AACA,GAAIN,OAAO,CAACC,GAAG,CAACM,QAAQ,GAAK,YAAY,EAAI,IAAI,CAACX,aAAa,EAAI,IAAI,CAACC,MAAM,CAAE,CAC9E,GAAI,CACF,MAAO,MAAM,KAAI,CAACW,qBAAqB,CAAC,CAAC,CAC3C,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,KAAI,CAACE,gBAAgB,CAAC,CAAC,CAChC,CACF,CAEA;AACA,MAAO,KAAI,CAACA,gBAAgB,CAAC,CAAC,CAChC,CAEA,KAAc,CAAAH,qBAAqBA,CAAA,CAA4B,CAC7D,GAAI,CACF;AACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,kDAAAC,MAAA,CACuB,IAAI,CAAClB,aAAa,wBAAAkB,MAAA,CAAsB,IAAI,CAACjB,MAAM,CACtG,CAAC,CAED,GAAI,CAACe,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAF,MAAA,CAAwBF,QAAQ,CAACK,MAAM,CAAE,CAAC,CAC3D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,MAAO,KAAI,CAACC,cAAc,CAACF,IAAI,CAACG,MAAM,EAAI,EAAE,CAAC,CAC/C,CAAE,MAAOZ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,KAAM,CAAAA,KAAK,CACb,CACF,CAEQW,cAAcA,CAACC,MAAkB,CAAkB,CACzD,GAAIA,MAAM,CAACC,MAAM,CAAG,CAAC,CAAE,CACrB,MAAO,EAAE,CACX,CAEA;AACA,KAAM,CAAAC,OAAO,CAAGF,MAAM,CAAC,CAAC,CAAC,CACzB,KAAM,CAAAG,QAAQ,CAAGH,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAEhC,MAAO,CAAAD,QAAQ,CAACE,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,GAAK,CAClC;AACA,KAAM,CAAAC,QAAQ,CAAIC,UAAkB,EAAK,CACvC,KAAM,CAAAC,WAAW,CAAGR,OAAO,CAACS,SAAS,CAACC,CAAC,EAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC,CAC9F,MAAO,CAAAH,WAAW,EAAI,CAAC,CAAGJ,GAAG,CAACI,WAAW,CAAC,EAAI,EAAE,CAAG,EAAE,CACvD,CAAC,CAED,MAAO,CACLK,EAAE,CAAEP,QAAQ,CAAC,IAAI,CAAC,MAAAf,MAAA,CAAQuB,MAAM,CAACT,KAAK,CAAG,CAAC,CAAC,CAACU,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAE,CAC9DC,IAAI,CAAEV,QAAQ,CAAC,MAAM,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAI,EAAE,CAC9CW,OAAO,CAAEX,QAAQ,CAAC,KAAK,CAAC,EAAIA,QAAQ,CAAC,KAAK,CAAC,EAAIA,QAAQ,CAAC,SAAS,CAAC,EAAI,EAAE,CACxEY,KAAK,CAAEZ,QAAQ,CAAC,OAAO,CAAC,EAAIA,QAAQ,CAAC,KAAK,CAAC,EAAI,EAAE,CACjDa,KAAK,CAAEb,QAAQ,CAAC,OAAO,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAIA,QAAQ,CAAC,KAAK,CAAC,EAAI,EAAE,CACnEc,OAAO,CAAEd,QAAQ,CAAC,SAAS,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAI,EAAE,CACpDe,OAAO,CAAGf,QAAQ,CAAC,MAAM,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAI,KAA2B,CAC3EgB,KAAK,CAAEhB,QAAQ,CAAC,OAAO,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAI,EAAE,CAChDiB,GAAG,CAAEC,QAAQ,CAAClB,QAAQ,CAAC,KAAK,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAI,GAAG,CAAC,EAAI,CAAC,CAC5DmB,MAAM,CAAEC,UAAU,CAACpB,QAAQ,CAAC,QAAQ,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAI,GAAG,CAAC,EAAI,CAAC,CACpEqB,QAAQ,CAAErB,QAAQ,CAAC,OAAO,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAI,EAAE,CACnDsB,KAAK,CAAEtB,QAAQ,CAAC,OAAO,CAAC,EAAIA,QAAQ,CAAC,IAAI,CAAC,EAAIA,QAAQ,CAAC,MAAM,CAAC,EAAI,EAAE,CACpEuB,SAAS,CAAEvB,QAAQ,CAAC,SAAS,CAAC,EAAIA,QAAQ,CAAC,KAAK,CAAC,EAAI,GAAI,CAAAwB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC3FC,SAAS,CAAE3B,QAAQ,CAAC,WAAW,CAAC,EAAIA,QAAQ,CAAC,MAAM,CAAC,EAAI,EAAE,CAC1DZ,MAAM,CAAGY,QAAQ,CAAC,QAAQ,CAAC,EAAIA,QAAQ,CAAC,OAAO,CAAC,EAAI,QACtD,CAAC,CACH,CAAC,CAAC,CAAC4B,MAAM,CAACC,QAAQ,EAAIA,QAAQ,CAACnB,IAAI,EAAImB,QAAQ,CAAClB,OAAO,CAAC,CAAE;AAC5D,CAEA,KAAM,CAAAmB,eAAeA,CAACvB,EAAU,CAAgC,CAC9D,KAAM,CAAAwB,SAAS,CAAG,KAAM,KAAI,CAACtD,YAAY,CAAC,CAAC,CAC3C,MAAO,CAAAsD,SAAS,CAACC,IAAI,CAACH,QAAQ,EAAIA,QAAQ,CAACtB,EAAE,GAAKA,EAAE,CAAC,EAAI,IAAI,CAC/D,CAEA;AACAzB,gBAAgBA,CAAA,CAAmB,CACjC,MAAO,CACL,CACEyB,EAAE,CAAE,MAAM,CACVG,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,oBAAoB,CAC3BC,KAAK,CAAE,eAAe,CACtBC,OAAO,CAAE,QAAQ,CACjBC,OAAO,CAAE,GAAG,CACZC,KAAK,CAAE,IAAI,CACXC,GAAG,CAAE,CAAC,CACNE,MAAM,CAAE,GAAG,CACXE,QAAQ,CAAE,iCAAiC,CAC3CC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,YAAY,CACvBI,SAAS,CAAE,YAAY,CACvBvC,MAAM,CAAE,QACV,CAAC,CACD,CACEmB,EAAE,CAAE,MAAM,CACVG,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,kBAAkB,CACzBC,KAAK,CAAE,eAAe,CACtBC,OAAO,CAAE,QAAQ,CACjBC,OAAO,CAAE,GAAG,CACZC,KAAK,CAAE,aAAa,CACpBC,GAAG,CAAE,CAAC,CACNE,MAAM,CAAE,GAAG,CACXE,QAAQ,CAAE,iCAAiC,CAC3CC,KAAK,CAAE,MAAM,CACbC,SAAS,CAAE,YAAY,CACvBI,SAAS,CAAE,YAAY,CACvBvC,MAAM,CAAE,QACV,CAAC,CACD,CACEmB,EAAE,CAAE,MAAM,CACVG,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,oBAAoB,CAC3BC,KAAK,CAAE,eAAe,CACtBC,OAAO,CAAE,SAAS,CAClBC,OAAO,CAAE,GAAG,CACZC,KAAK,CAAE,YAAY,CACnBC,GAAG,CAAE,CAAC,CACNE,MAAM,CAAE,IAAI,CACZE,QAAQ,CAAE,iCAAiC,CAC3CC,KAAK,CAAE,OAAO,CACdC,SAAS,CAAE,YAAY,CACvBI,SAAS,CAAE,YAAY,CACvBvC,MAAM,CAAE,QACV,CAAC,CACF,CACH,CACF,CAEA,cAAe,CAAAvB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}