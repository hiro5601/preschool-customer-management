{"ast":null,"code":"class GoogleSheetsService{// 3秒間隔でAPI呼び出し\nconstructor(){this.spreadsheetId=void 0;this.apiKey=void 0;this.clientEmail=void 0;this.privateKey=void 0;this.cache=null;this.CACHE_DURATION=60*60*1000;// 1時間キャッシュ\nthis.MAX_RETRIES=2;// リトライ回数を削減\nthis.RETRY_DELAY=5000;// 5秒待機\nthis.lastApiCall=0;this.MIN_API_INTERVAL=3000;this.spreadsheetId=(process.env.REACT_APP_SPREADSHEET_ID||'').trim();this.apiKey=(process.env.REACT_APP_GOOGLE_API_KEY||'').trim();this.clientEmail=(process.env.REACT_APP_GOOGLE_CLIENT_EMAIL||'').trim();this.privateKey=(process.env.REACT_APP_GOOGLE_PRIVATE_KEY||'').trim();}async getCustomers(){// まずローカルストレージからデータを取得\nconst localData=this.getLocalCustomers();if(localData.length>0){console.log('ローカルストレージからデータを取得:',localData.length,'件');return localData;}// 本番環境ではGoogle Sheets APIからデータを取得してローカルに保存\nif(process.env.NODE_ENV==='production'&&this.spreadsheetId&&this.apiKey){// キャッシュをチェック\nif(this.cache&&Date.now()-this.cache.timestamp<this.CACHE_DURATION){console.log('キャッシュからデータを取得');return this.cache.data;}try{const data=await this.fetchFromGoogleSheetsWithRetry();// ローカルストレージに保存\nthis.saveLocalCustomers(data);// キャッシュを更新\nthis.cache={data,timestamp:Date.now()};return data;}catch(error){console.error('Google Sheets API エラー:',error);// キャッシュがある場合はそれを使用\nif(this.cache){console.log('エラーが発生したため、キャッシュデータを使用');return this.cache.data;}console.log('キャッシュもないため、モックデータを使用');return this.getMockCustomers();}}// 開発環境ではモックデータを返す\nreturn this.getMockCustomers();}async fetchFromGoogleSheetsWithRetry(){// API呼び出し間隔を制御\nconst timeSinceLastCall=Date.now()-this.lastApiCall;if(timeSinceLastCall<this.MIN_API_INTERVAL){const waitTime=this.MIN_API_INTERVAL-timeSinceLastCall;console.log(\"\".concat(waitTime,\"ms \\u5F85\\u6A5F\\u3057\\u3066\\u304B\\u3089API\\u547C\\u3073\\u51FA\\u3057...\"));await this.sleep(waitTime);}for(let attempt=1;attempt<=this.MAX_RETRIES;attempt++){try{console.log(\"Google Sheets API \\u547C\\u3073\\u51FA\\u3057 (\\u8A66\\u884C \".concat(attempt,\"/\").concat(this.MAX_RETRIES,\")\"));this.lastApiCall=Date.now();return await this.fetchFromGoogleSheets();}catch(error){console.error(\"\\u8A66\\u884C \".concat(attempt,\" \\u5931\\u6557:\"),error);// レート制限エラーの場合、待機時間を増やす\nif(error.message.includes('429')||error.message.includes('RATE_LIMIT_EXCEEDED')){const delay=this.RETRY_DELAY*Math.pow(2,attempt-1);// 指数バックオフ\nconsole.log(\"\".concat(delay,\"ms \\u5F85\\u6A5F\\u3057\\u3066\\u304B\\u3089\\u518D\\u8A66\\u884C...\"));await this.sleep(delay);continue;}// レート制限エラーが3回連続で発生した場合、モックデータを返す\nif(attempt===this.MAX_RETRIES&&(error.message.includes('429')||error.message.includes('RATE_LIMIT_EXCEEDED'))){console.log('レート制限エラーが継続しているため、モックデータを返します');return this.getMockCustomers();}// その他のエラーは即座に失敗\nthrow error;}}throw new Error('最大リトライ回数に達しました');}sleep(ms){return new Promise(resolve=>setTimeout(resolve,ms));}async fetchFromGoogleSheets(){try{var _spreadsheetInfo$shee,_spreadsheetInfo$shee2,_spreadsheetInfo$shee3;console.log('Google Sheets API 設定:',{spreadsheetId:this.spreadsheetId,apiKey:this.apiKey?'設定済み':'未設定',environment:process.env.NODE_ENV});// 一般公開されたスプレッドシートにAPIキーでアクセス\n// まず、スプレッドシートの情報を取得してシート名を確認\nconst spreadsheetInfoUrl=\"https://sheets.googleapis.com/v4/spreadsheets/\".concat(this.spreadsheetId.trim(),\"?key=\").concat(this.apiKey);console.log('スプレッドシート情報取得URL:',spreadsheetInfoUrl);const infoResponse=await fetch(spreadsheetInfoUrl);if(!infoResponse.ok){throw new Error(\"Spreadsheet info request failed: \".concat(infoResponse.status));}const spreadsheetInfo=await infoResponse.json();console.log('スプレッドシート情報:',spreadsheetInfo);// 最初のシートの名前を取得\nconst sheetName=((_spreadsheetInfo$shee=spreadsheetInfo.sheets)===null||_spreadsheetInfo$shee===void 0?void 0:(_spreadsheetInfo$shee2=_spreadsheetInfo$shee[0])===null||_spreadsheetInfo$shee2===void 0?void 0:(_spreadsheetInfo$shee3=_spreadsheetInfo$shee2.properties)===null||_spreadsheetInfo$shee3===void 0?void 0:_spreadsheetInfo$shee3.title)||'シート1';console.log('使用するシート名:',sheetName);const url=\"https://sheets.googleapis.com/v4/spreadsheets/\".concat(this.spreadsheetId.trim(),\"/values/\").concat(encodeURIComponent(sheetName),\"?key=\").concat(this.apiKey);console.log('API URL:',url);const response=await fetch(url);console.log('API レスポンス:',{status:response.status,statusText:response.statusText,ok:response.ok});if(!response.ok){const errorText=await response.text();console.error('API エラーレスポンス:',errorText);throw new Error(\"HTTP error! status: \".concat(response.status,\", message: \").concat(errorText));}const data=await response.json();console.log('取得したデータ:',data);const parsedData=this.parseSheetData(data.values||[]);console.log('解析されたデータ:',parsedData);return parsedData;}catch(error){console.error('Google Sheets データ取得エラー:',error);throw error;}}parseSheetData(values){if(values.length<2){return[];}// ヘッダー行をスキップしてデータを解析\nconst headers=values[0];const dataRows=values.slice(1);console.log('ヘッダー:',headers);console.log('データ行数:',dataRows.length);return dataRows.map((row,index)=>{console.log(\"\\u884C \".concat(index+1,\":\"),row);// ヘッダーに基づいてデータをマッピング\nconst getValue=headerName=>{const headerIndex=headers.findIndex(h=>h&&h.toLowerCase().includes(headerName.toLowerCase()));return headerIndex>=0?(row[headerIndex]||'').trim():'';};const customer={id:getValue('id')||\"C\".concat(String(index+1).padStart(3,'0')),name:getValue('name')||getValue('名前')||'',petName:getValue('pet')||getValue('ペット')||getValue('petname')||'',email:getValue('email')||getValue('メール')||'',phone:getValue('phone')||getValue('電話')||getValue('tel')||'',address:getValue('address')||getValue('住所')||'',petType:getValue('type')||getValue('種類')||'その他',breed:getValue('breed')||getValue('品種')||'',age:parseInt(getValue('age')||getValue('年齢')||'0')||0,weight:parseFloat(getValue('weight')||getValue('体重')||'0')||0,imageUrl:getValue('image')||getValue('画像')||getValue('imageurl')||'',notes:getValue('notes')||getValue('備考')||getValue('memo')||'',createdAt:getValue('created')||getValue('登録日')||new Date().toISOString().split('T')[0],lastVisit:getValue('lastvisit')||getValue('最終来店')||'',status:getValue('status')||getValue('ステータス')||'active'};console.log(\"\\u89E3\\u6790\\u3055\\u308C\\u305F\\u9867\\u5BA2 \".concat(index+1,\":\"),customer);return customer;}).filter(customer=>customer.name&&customer.petName);// 名前とペット名があるもののみ\n}async getCustomerById(id){const customers=await this.getCustomers();return customers.find(customer=>customer.id===id)||null;}// ローカルストレージから顧客データを取得\ngetLocalCustomers(){try{const stored=localStorage.getItem('preschool_customers');if(stored){const data=JSON.parse(stored);console.log('ローカルストレージから取得したデータ:',data);return data;}}catch(error){console.error('ローカルストレージからのデータ取得エラー:',error);}return[];}// ローカルストレージに顧客データを保存\nsaveLocalCustomers(customers){try{localStorage.setItem('preschool_customers',JSON.stringify(customers));console.log('ローカルストレージに保存:',customers.length,'件');}catch(error){console.error('ローカルストレージへの保存エラー:',error);}}// ローカルストレージをクリア\nclearLocalData(){try{localStorage.removeItem('preschool_customers');console.log('ローカルストレージをクリアしました');}catch(error){console.error('ローカルストレージのクリアエラー:',error);}}// スプレッドシートからデータを再取得してローカルに保存\nasync refreshFromSheets(){console.log('スプレッドシートからデータを再取得します...');this.cache=null;// キャッシュをクリア\nreturn await this.getCustomers();}// モックデータ（開発用）\ngetMockCustomers(){return[{id:'C001',name:'田中太郎',petName:'ポチ',email:'tanaka@example.com',phone:'090-1234-5678',address:'東京都渋谷区',petType:'犬',breed:'柴犬',age:3,weight:8.5,imageUrl:'https://via.placeholder.com/150',notes:'人懐っこい性格',createdAt:'2024-01-15',lastVisit:'2024-01-20',status:'active'},{id:'C002',name:'佐藤花子',petName:'ミケ',email:'sato@example.com',phone:'090-9876-5432',address:'東京都新宿区',petType:'猫',breed:'アメリカンショートヘア',age:2,weight:4.2,imageUrl:'https://via.placeholder.com/150',notes:'少し臆病',createdAt:'2024-01-10',lastVisit:'2024-01-18',status:'active'},{id:'C003',name:'山田次郎',petName:'ハナ',email:'yamada@example.com',phone:'090-5555-1234',address:'東京都世田谷区',petType:'犬',breed:'ゴールデンレトリバー',age:5,weight:25.0,imageUrl:'https://via.placeholder.com/150',notes:'とても活発',createdAt:'2024-01-05',lastVisit:'2024-01-12',status:'active'}];}}export default GoogleSheetsService;","map":{"version":3,"names":["GoogleSheetsService","constructor","spreadsheetId","apiKey","clientEmail","privateKey","cache","CACHE_DURATION","MAX_RETRIES","RETRY_DELAY","lastApiCall","MIN_API_INTERVAL","process","env","REACT_APP_SPREADSHEET_ID","trim","REACT_APP_GOOGLE_API_KEY","REACT_APP_GOOGLE_CLIENT_EMAIL","REACT_APP_GOOGLE_PRIVATE_KEY","getCustomers","localData","getLocalCustomers","length","console","log","NODE_ENV","Date","now","timestamp","data","fetchFromGoogleSheetsWithRetry","saveLocalCustomers","error","getMockCustomers","timeSinceLastCall","waitTime","concat","sleep","attempt","fetchFromGoogleSheets","message","includes","delay","Math","pow","Error","ms","Promise","resolve","setTimeout","_spreadsheetInfo$shee","_spreadsheetInfo$shee2","_spreadsheetInfo$shee3","environment","spreadsheetInfoUrl","infoResponse","fetch","ok","status","spreadsheetInfo","json","sheetName","sheets","properties","title","url","encodeURIComponent","response","statusText","errorText","text","parsedData","parseSheetData","values","headers","dataRows","slice","map","row","index","getValue","headerName","headerIndex","findIndex","h","toLowerCase","customer","id","String","padStart","name","petName","email","phone","address","petType","breed","age","parseInt","weight","parseFloat","imageUrl","notes","createdAt","toISOString","split","lastVisit","filter","getCustomerById","customers","find","stored","localStorage","getItem","JSON","parse","setItem","stringify","clearLocalData","removeItem","refreshFromSheets"],"sources":["C:/Users/user/OneDrive/Desktop/preschool_data/src/services/googleSheetsApi.ts"],"sourcesContent":["import { CustomerData } from '../types/customer';\r\n\r\nclass GoogleSheetsService {\r\n  private spreadsheetId: string;\r\n  private apiKey: string;\r\n  private clientEmail: string;\r\n  private privateKey: string;\r\n  private cache: { data: CustomerData[]; timestamp: number } | null = null;\r\n  private readonly CACHE_DURATION = 60 * 60 * 1000; // 1時間キャッシュ\r\n  private readonly MAX_RETRIES = 2; // リトライ回数を削減\r\n  private readonly RETRY_DELAY = 5000; // 5秒待機\r\n  private lastApiCall: number = 0;\r\n  private readonly MIN_API_INTERVAL = 3000; // 3秒間隔でAPI呼び出し\r\n\r\n  constructor() {\r\n    this.spreadsheetId = (process.env.REACT_APP_SPREADSHEET_ID || '').trim();\r\n    this.apiKey = (process.env.REACT_APP_GOOGLE_API_KEY || '').trim();\r\n    this.clientEmail = (process.env.REACT_APP_GOOGLE_CLIENT_EMAIL || '').trim();\r\n    this.privateKey = (process.env.REACT_APP_GOOGLE_PRIVATE_KEY || '').trim();\r\n  }\r\n\r\n  async getCustomers(): Promise<CustomerData[]> {\r\n    // まずローカルストレージからデータを取得\r\n    const localData = this.getLocalCustomers();\r\n    if (localData.length > 0) {\r\n      console.log('ローカルストレージからデータを取得:', localData.length, '件');\r\n      return localData;\r\n    }\r\n\r\n    // 本番環境ではGoogle Sheets APIからデータを取得してローカルに保存\r\n    if (process.env.NODE_ENV === 'production' && this.spreadsheetId && this.apiKey) {\r\n      // キャッシュをチェック\r\n      if (this.cache && Date.now() - this.cache.timestamp < this.CACHE_DURATION) {\r\n        console.log('キャッシュからデータを取得');\r\n        return this.cache.data;\r\n      }\r\n\r\n      try {\r\n        const data = await this.fetchFromGoogleSheetsWithRetry();\r\n        // ローカルストレージに保存\r\n        this.saveLocalCustomers(data);\r\n        // キャッシュを更新\r\n        this.cache = {\r\n          data,\r\n          timestamp: Date.now()\r\n        };\r\n        return data;\r\n      } catch (error) {\r\n        console.error('Google Sheets API エラー:', error);\r\n        // キャッシュがある場合はそれを使用\r\n        if (this.cache) {\r\n          console.log('エラーが発生したため、キャッシュデータを使用');\r\n          return this.cache.data;\r\n        }\r\n        console.log('キャッシュもないため、モックデータを使用');\r\n        return this.getMockCustomers();\r\n      }\r\n    }\r\n    \r\n    // 開発環境ではモックデータを返す\r\n    return this.getMockCustomers();\r\n  }\r\n\r\n  private async fetchFromGoogleSheetsWithRetry(): Promise<CustomerData[]> {\r\n    // API呼び出し間隔を制御\r\n    const timeSinceLastCall = Date.now() - this.lastApiCall;\r\n    if (timeSinceLastCall < this.MIN_API_INTERVAL) {\r\n      const waitTime = this.MIN_API_INTERVAL - timeSinceLastCall;\r\n      console.log(`${waitTime}ms 待機してからAPI呼び出し...`);\r\n      await this.sleep(waitTime);\r\n    }\r\n\r\n    for (let attempt = 1; attempt <= this.MAX_RETRIES; attempt++) {\r\n      try {\r\n        console.log(`Google Sheets API 呼び出し (試行 ${attempt}/${this.MAX_RETRIES})`);\r\n        this.lastApiCall = Date.now();\r\n        return await this.fetchFromGoogleSheets();\r\n      } catch (error: any) {\r\n        console.error(`試行 ${attempt} 失敗:`, error);\r\n        \r\n        // レート制限エラーの場合、待機時間を増やす\r\n        if (error.message.includes('429') || error.message.includes('RATE_LIMIT_EXCEEDED')) {\r\n          const delay = this.RETRY_DELAY * Math.pow(2, attempt - 1); // 指数バックオフ\r\n          console.log(`${delay}ms 待機してから再試行...`);\r\n          await this.sleep(delay);\r\n          continue;\r\n        }\r\n        \r\n        // レート制限エラーが3回連続で発生した場合、モックデータを返す\r\n        if (attempt === this.MAX_RETRIES && (error.message.includes('429') || error.message.includes('RATE_LIMIT_EXCEEDED'))) {\r\n          console.log('レート制限エラーが継続しているため、モックデータを返します');\r\n          return this.getMockCustomers();\r\n        }\r\n        \r\n        // その他のエラーは即座に失敗\r\n        throw error;\r\n      }\r\n    }\r\n    \r\n    throw new Error('最大リトライ回数に達しました');\r\n  }\r\n\r\n  private sleep(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  private async fetchFromGoogleSheets(): Promise<CustomerData[]> {\r\n    try {\r\n      console.log('Google Sheets API 設定:', {\r\n        spreadsheetId: this.spreadsheetId,\r\n        apiKey: this.apiKey ? '設定済み' : '未設定',\r\n        environment: process.env.NODE_ENV\r\n      });\r\n\r\n      // 一般公開されたスプレッドシートにAPIキーでアクセス\r\n      // まず、スプレッドシートの情報を取得してシート名を確認\r\n      const spreadsheetInfoUrl = `https://sheets.googleapis.com/v4/spreadsheets/${this.spreadsheetId.trim()}?key=${this.apiKey}`;\r\n      console.log('スプレッドシート情報取得URL:', spreadsheetInfoUrl);\r\n      \r\n      const infoResponse = await fetch(spreadsheetInfoUrl);\r\n      if (!infoResponse.ok) {\r\n        throw new Error(`Spreadsheet info request failed: ${infoResponse.status}`);\r\n      }\r\n      \r\n      const spreadsheetInfo = await infoResponse.json();\r\n      console.log('スプレッドシート情報:', spreadsheetInfo);\r\n      \r\n      // 最初のシートの名前を取得\r\n      const sheetName = spreadsheetInfo.sheets?.[0]?.properties?.title || 'シート1';\r\n      console.log('使用するシート名:', sheetName);\r\n      \r\n      const url = `https://sheets.googleapis.com/v4/spreadsheets/${this.spreadsheetId.trim()}/values/${encodeURIComponent(sheetName)}?key=${this.apiKey}`;\r\n      console.log('API URL:', url);\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      console.log('API レスポンス:', {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        ok: response.ok\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('API エラーレスポンス:', errorText);\r\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('取得したデータ:', data);\r\n      \r\n      const parsedData = this.parseSheetData(data.values || []);\r\n      console.log('解析されたデータ:', parsedData);\r\n      \r\n      return parsedData;\r\n    } catch (error) {\r\n      console.error('Google Sheets データ取得エラー:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private parseSheetData(values: string[][]): CustomerData[] {\r\n    if (values.length < 2) {\r\n      return [];\r\n    }\r\n\r\n    // ヘッダー行をスキップしてデータを解析\r\n    const headers = values[0];\r\n    const dataRows = values.slice(1);\r\n\r\n    console.log('ヘッダー:', headers);\r\n    console.log('データ行数:', dataRows.length);\r\n\r\n    return dataRows.map((row, index) => {\r\n      console.log(`行 ${index + 1}:`, row);\r\n      \r\n      // ヘッダーに基づいてデータをマッピング\r\n      const getValue = (headerName: string) => {\r\n        const headerIndex = headers.findIndex(h => h && h.toLowerCase().includes(headerName.toLowerCase()));\r\n        return headerIndex >= 0 ? (row[headerIndex] || '').trim() : '';\r\n      };\r\n\r\n      const customer = {\r\n        id: getValue('id') || `C${String(index + 1).padStart(3, '0')}`,\r\n        name: getValue('name') || getValue('名前') || '',\r\n        petName: getValue('pet') || getValue('ペット') || getValue('petname') || '',\r\n        email: getValue('email') || getValue('メール') || '',\r\n        phone: getValue('phone') || getValue('電話') || getValue('tel') || '',\r\n        address: getValue('address') || getValue('住所') || '',\r\n        petType: (getValue('type') || getValue('種類') || 'その他') as '犬' | '猫' | 'その他',\r\n        breed: getValue('breed') || getValue('品種') || '',\r\n        age: parseInt(getValue('age') || getValue('年齢') || '0') || 0,\r\n        weight: parseFloat(getValue('weight') || getValue('体重') || '0') || 0,\r\n        imageUrl: getValue('image') || getValue('画像') || getValue('imageurl') || '',\r\n        notes: getValue('notes') || getValue('備考') || getValue('memo') || '',\r\n        createdAt: getValue('created') || getValue('登録日') || new Date().toISOString().split('T')[0],\r\n        lastVisit: getValue('lastvisit') || getValue('最終来店') || '',\r\n        status: (getValue('status') || getValue('ステータス') || 'active') as 'active' | 'inactive'\r\n      };\r\n\r\n      console.log(`解析された顧客 ${index + 1}:`, customer);\r\n      return customer;\r\n    }).filter(customer => customer.name && customer.petName); // 名前とペット名があるもののみ\r\n  }\r\n\r\n  async getCustomerById(id: string): Promise<CustomerData | null> {\r\n    const customers = await this.getCustomers();\r\n    return customers.find(customer => customer.id === id) || null;\r\n  }\r\n\r\n  // ローカルストレージから顧客データを取得\r\n  private getLocalCustomers(): CustomerData[] {\r\n    try {\r\n      const stored = localStorage.getItem('preschool_customers');\r\n      if (stored) {\r\n        const data = JSON.parse(stored);\r\n        console.log('ローカルストレージから取得したデータ:', data);\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.error('ローカルストレージからのデータ取得エラー:', error);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // ローカルストレージに顧客データを保存\r\n  private saveLocalCustomers(customers: CustomerData[]): void {\r\n    try {\r\n      localStorage.setItem('preschool_customers', JSON.stringify(customers));\r\n      console.log('ローカルストレージに保存:', customers.length, '件');\r\n    } catch (error) {\r\n      console.error('ローカルストレージへの保存エラー:', error);\r\n    }\r\n  }\r\n\r\n  // ローカルストレージをクリア\r\n  public clearLocalData(): void {\r\n    try {\r\n      localStorage.removeItem('preschool_customers');\r\n      console.log('ローカルストレージをクリアしました');\r\n    } catch (error) {\r\n      console.error('ローカルストレージのクリアエラー:', error);\r\n    }\r\n  }\r\n\r\n  // スプレッドシートからデータを再取得してローカルに保存\r\n  public async refreshFromSheets(): Promise<CustomerData[]> {\r\n    console.log('スプレッドシートからデータを再取得します...');\r\n    this.cache = null; // キャッシュをクリア\r\n    return await this.getCustomers();\r\n  }\r\n\r\n  // モックデータ（開発用）\r\n  getMockCustomers(): CustomerData[] {\r\n    return [\r\n      {\r\n        id: 'C001',\r\n        name: '田中太郎',\r\n        petName: 'ポチ',\r\n        email: 'tanaka@example.com',\r\n        phone: '090-1234-5678',\r\n        address: '東京都渋谷区',\r\n        petType: '犬',\r\n        breed: '柴犬',\r\n        age: 3,\r\n        weight: 8.5,\r\n        imageUrl: 'https://via.placeholder.com/150',\r\n        notes: '人懐っこい性格',\r\n        createdAt: '2024-01-15',\r\n        lastVisit: '2024-01-20',\r\n        status: 'active'\r\n      },\r\n      {\r\n        id: 'C002',\r\n        name: '佐藤花子',\r\n        petName: 'ミケ',\r\n        email: 'sato@example.com',\r\n        phone: '090-9876-5432',\r\n        address: '東京都新宿区',\r\n        petType: '猫',\r\n        breed: 'アメリカンショートヘア',\r\n        age: 2,\r\n        weight: 4.2,\r\n        imageUrl: 'https://via.placeholder.com/150',\r\n        notes: '少し臆病',\r\n        createdAt: '2024-01-10',\r\n        lastVisit: '2024-01-18',\r\n        status: 'active'\r\n      },\r\n      {\r\n        id: 'C003',\r\n        name: '山田次郎',\r\n        petName: 'ハナ',\r\n        email: 'yamada@example.com',\r\n        phone: '090-5555-1234',\r\n        address: '東京都世田谷区',\r\n        petType: '犬',\r\n        breed: 'ゴールデンレトリバー',\r\n        age: 5,\r\n        weight: 25.0,\r\n        imageUrl: 'https://via.placeholder.com/150',\r\n        notes: 'とても活発',\r\n        createdAt: '2024-01-05',\r\n        lastVisit: '2024-01-12',\r\n        status: 'active'\r\n      }\r\n    ];\r\n  }\r\n}\r\n\r\nexport default GoogleSheetsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}